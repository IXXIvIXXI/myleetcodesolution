class Solution {
    public String minWindow(String s, String t) {
        // sliding window
        if (t.length() == 0 || s.length() == 0) {
            return "";
        }
        HashMap<Character, Integer> countT = updateCountT(t);
        
        int have = 0;
        String res = "";
        int resLen = s.length() + 1;
        int count = 0;
        int l = 0;
        
        for (int r = 0; r < s.length(); r++) {
            if (countT.containsKey(s.charAt(r))) {
               countT.put(s.charAt(r), countT.get(s.charAt(r)) - 1);
               if (countT.get(s.charAt(r)) >= 0) {
                   count++;
               }
            }
            
            while(count == t.length()) {
                if (r - l + 1 < resLen) {
                    resLen = r - l + 1;
                    res = s.substring(l, r+1);
                }
                
                if (countT.containsKey(s.charAt(l))) {
                    countT.put(s.charAt(l), countT.get(s.charAt(l)) + 1);
                    if(countT.get(s.charAt(l)) > 0) {
                      count--;
                    }
                }
                l++;
            }
            
        }
        return res;
    }
    
    public HashMap<Character, Integer> updateCountT(String t) {
        HashMap<Character, Integer> countT = new HashMap<>();
        for (int i = 0; i < t.length(); i++) {
            countT.put(t.charAt(i), countT.getOrDefault(t.charAt(i), 0) + 1);
        }
        
        return countT;
    }
}
