class Solution {
    /*
    ArrayList<Integer> list = new ArrayList<Integer>(); 
    public int kthSmallest(TreeNode root, int k) {
        inOrder(root);
        return list.get(k - 1);
    }
    
    private void inOrder(TreeNode root) {
        if (root == null) {
            return;
        }
        
        inOrder(root.left);
        
        list.add(root.val);
        
        inOrder(root.right);
    }
    */
    public int kthSmallest(TreeNode root, int k) {
        Stack<TreeNode> s = new Stack<>();
        
        while(true) {
            while(root != null) {
                s.push(root);
                root = root.left;
            }
            root = s.pop();
            if (--k == 0) {
                return root.val;
            }
            root = root.right;
        }
    }
}
