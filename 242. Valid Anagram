class Solution {
    public boolean isAnagram(String s, String t) {
        if (s.length() != t.length()) {
            return false;
        }
        
        // HashMap solution
        /*
        HashMap<Character, Integer> m1 = new HashMap<Character, Integer>();
        HashMap<Character, Integer> m2 = new HashMap<Character, Integer>();
        for (int i = 0; i < s.length(); i++) {
            m1.put(s.charAt(i), m1.getOrDefault(s.charAt(i), 0) + 1);
            m2.put(t.charAt(i), m2.getOrDefault(t.charAt(i), 0) + 1);
        }
        
        return m1.equals(m2);
        */
        
        // array solution
        int[] charCounts = new int[26];
        for (int i = 0; i < s.length(); i++) {
            charCounts[s.charAt(i) - 'a']++;
            charCounts[t.charAt(i) - 'a']--;
        }
        
        for (int count : charCounts) {
            if (count != 0) {
                return false;
            }
        }
        
        return true;
    }
}
