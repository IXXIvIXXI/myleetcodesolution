class Solution {
    private static final int[][] DIRECTIONS = new int[][]{{0, 1}, {1, 0}, {-1, 0}, {0, -1}};
    char[][] map;
    public int numIslands(char[][] grid) {    
        int count = 0;
        map = grid;
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[0].length; j++) {
                if (grid[i][j] == '1') {
                    count++;
                    bfs(i, j);
                }
            }
        }
        
        return count;
    }
    
    public void bfs(int row, int col) {
        if (row < 0 || row >= map.length ||
            col < 0 || col >= map[0].length ||
            map[row][col] == '0') {
            return;
        }
        map[row][col] = '0';
        for (int[] dir : DIRECTIONS) {
            int newRow = row + dir[0];
            int newCol = col + dir[1];
            bfs(newRow, newCol);
        }
    }
}
