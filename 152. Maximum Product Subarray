class Solution {
    public int maxProduct(int[] nums) {
        if (nums.length == 0) {
            return 0;
        }
        /*
        // brute force
        int res = nums[0];
        
        for (int i = 0; i < nums.length; i++) {
            int acc = 1;
            for (int j = i; j < nums.length; j++) {
                acc *= nums[j];
                res = Math.max(acc, res);
            }
        }

        return res;
    }
    */
    // DP
        int curr_max = nums[0];
        int curr_min = nums[0];
        int res = curr_max;
        
        for (int i = 1; i < nums.length; i++) {
            int curr = nums[i];
            int temp_max = Math.max(curr, Math.max(curr * curr_max, curr * curr_min));
            curr_min = Math.min(curr, Math.min(curr_max * curr, curr * curr_min));
            
            curr_max = temp_max;
            res = Math.max(curr_max, res);
        }
        
        return res;
    }
}
