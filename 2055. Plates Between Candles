class Solution {
    // an array stores result
    // an array stores left bar
    // an array stores right bar
    // an array stores prefix sum
    // to find the left most bar -> rightBar[left]
    // to find right most bar -> leftBar[right];
    public int[] platesBetweenCandles(String s, int[][] queries) {
        int len = s.length();
        int[] res = new int[queries.length];
        int[] leftBar = new int[len];
        int[] rightBar = new int[len];
        int[] prefixSum = new int[len];
        
        leftBar[0] = s.charAt(0) == '|' ? 0 : -1;
        prefixSum[0] = s.charAt(0) == '*' ? 1 : 0;
        for (int i = 1; i < len; i++) {
            leftBar[i] = s.charAt(i) == '|' ? i : leftBar[i - 1];
            prefixSum[i] = prefixSum[i - 1] + (s.charAt(i) == '*' ? 1 : 0);
        }
        
        rightBar[len - 1] = s.charAt(len - 1) == '|' ? len - 1 : len;
        for (int i = len - 2; i >= 0; i--) {
            rightBar[i] = s.charAt(i) == '|' ? i : rightBar[i + 1];
        }
        
        int i = 0;
        for (int[] query : queries) {
            int start = rightBar[query[0]];
            int end = leftBar[query[1]];
            res[i] = start > end ? 0 : prefixSum[end] - prefixSum[start];
            i++;
        }
        
        return res;
    }
}
